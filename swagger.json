{
  "openapi": "3.0.0",
  "paths": {
    "/auth/google": {
      "get": {
        "operationId": "AuthController_googleAuth",
        "summary": "Redirect to Google for authentication",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "AuthController_googleAuthRedirect",
        "summary": "Google callback for authentication",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "user": {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "email": "test@example.com",
                      "full_name": "John Doe",
                      "provider": "local",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z"
                    },
                    "config": {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "currency": "IDR",
                      "fractions": 2,
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already registered."
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Log in a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "access_token": "your_jwt_token",
                    "user": {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "email": "test@example.com",
                      "full_name": "John Doe",
                      "provider": "local",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z"
                    },
                    "config": {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "currency": "IDR",
                      "fractions": 2,
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials."
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "summary": "Send password reset link",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent."
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "summary": "Reset user password",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset."
          },
          "401": {
            "description": "Invalid or expired token."
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "summary": "Get user profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "user": {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "email": "test@example.com",
                      "full_name": "John Doe",
                      "provider": "local",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z"
                    },
                    "config": {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "currency": "IDR",
                      "fractions": 2,
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/config": {
      "get": {
        "operationId": "ConfigController_getCurrencyConfig",
        "summary": "Get currency configuration for the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the currency configuration for the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "currency": "IDR",
                    "fractions": 2,
                    "gemini_api_key": "yourapikey",
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Config"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ConfigController_updateCurrencyConfig",
        "summary": "Update currency configuration for the current user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates and returns the new currency configuration for the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "currency": "USD",
                    "fractions": 2,
                    "gemini_api_key": "yourapikey",
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Config"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets": {
      "post": {
        "operationId": "WalletsController_create",
        "summary": "Create a new wallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWalletDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The wallet has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "name": "My Bank Account",
                    "initial_balance": 1000,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Wallets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "WalletsController_findAll",
        "summary": "Get all wallets for the current user",
        "parameters": [
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of wallets with their current balances.",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "name": "My Bank Account",
                      "initial_balance": 1000,
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z",
                      "current_balance": 1250.5
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Wallets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets/{id}": {
      "get": {
        "operationId": "WalletsController_findOne",
        "summary": "Get a specific wallet by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wallet with its current balance.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "name": "My Bank Account",
                    "initial_balance": 1000,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z",
                    "current_balance": 1250.5
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Wallets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "WalletsController_update",
        "summary": "Update a wallet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWalletDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated wallet.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "name": "My Updated Bank Account",
                    "initial_balance": 1500,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Wallets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "WalletsController_remove",
        "summary": "Delete a wallet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The wallet has been successfully deleted."
          }
        },
        "tags": [
          "Wallets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "summary": "Create a new category",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The category has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "name": "Salary",
                    "type": "income",
                    "icon": "briefcase-outline",
                    "color": "#26de81",
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CategoriesController_findAll",
        "summary": "Get all categories for the current user (including defaults)",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "income",
                "expense"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "name": "Salary",
                      "type": "income",
                      "icon": "briefcase-outline",
                      "color": "#26de81",
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/categories/bulk": {
      "post": {
        "operationId": "CategoriesController_createBulk",
        "summary": "Create multiple categories in bulk",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The categories have been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "name": "Salary",
                      "type": "income",
                      "icon": "briefcase-outline",
                      "color": "#26de81",
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z"
                    },
                    {
                      "id": "b2c3d4e5-f6g7-8901-2345-67890abcdef1",
                      "name": "Groceries",
                      "type": "expense",
                      "icon": "cart-outline",
                      "color": "#ff6b6b",
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "created_at": "2025-07-28T00:00:01.000Z",
                      "updated_at": "2025-07-28T00:00:01.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_findOne",
        "summary": "Get a specific category by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The category.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "name": "Salary",
                    "type": "income",
                    "icon": "briefcase-outline",
                    "color": "#26de81",
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "summary": "Update a category",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated category.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "name": "Freelance Income",
                    "type": "income",
                    "icon": "laptop-outline",
                    "color": "#45aaf2",
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "summary": "Delete a category",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The category has been successfully deleted."
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transactions/bulk-expense": {
      "post": {
        "operationId": "TransactionsController_createByText",
        "summary": "Create a new transaction using text",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionByTextDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction has been successfully created."
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transactions": {
      "post": {
        "operationId": "TransactionsController_create",
        "summary": "Create a new transaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "type": "expense",
                    "amount": 50,
                    "wallet_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "date": "2025-07-28T00:00:00.000Z",
                    "note": "Lunch",
                    "is_recurring": false,
                    "recurring_pattern": null,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "TransactionsController_findAll",
        "summary": "Get all transactions for the current user",
        "parameters": [
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "description": "The start date for the transactions.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "description": "The end date for the transactions.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "wallet_id",
            "required": false,
            "in": "query",
            "description": "Filter by wallet ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "required": false,
            "in": "query",
            "description": "Filter by category ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by transaction type.",
            "schema": {
              "enum": [
                "income",
                "expense"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by date.",
            "schema": {
              "default": "DESC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transactions.",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "type": "expense",
                      "amount": 50,
                      "wallet_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "date": "2025-07-28T00:00:00.000Z",
                      "note": "Lunch",
                      "is_recurring": false,
                      "recurring_pattern": null,
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transactions/{id}": {
      "get": {
        "operationId": "TransactionsController_findOne",
        "summary": "Get a specific transaction by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "type": "expense",
                    "amount": 50,
                    "wallet_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "date": "2025-07-28T00:00:00.000Z",
                    "note": "Lunch",
                    "is_recurring": false,
                    "recurring_pattern": null,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "TransactionsController_update",
        "summary": "Update a transaction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "type": "expense",
                    "amount": 75,
                    "wallet_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "date": "2025-07-28T00:00:00.000Z",
                    "note": "Dinner",
                    "is_recurring": false,
                    "recurring_pattern": null,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "TransactionsController_remove",
        "summary": "Delete a transaction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The transaction has been successfully deleted."
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/budgets": {
      "post": {
        "operationId": "BudgetsController_create",
        "summary": "Create a new budget",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBudgetDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The budget has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "limit_amount": 500,
                    "month": 7,
                    "year": 2025,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z",
                    "total_spent": 150
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "BudgetsController_findAll",
        "summary": "Get all budgets for the current user",
        "parameters": [
          {
            "name": "year",
            "required": false,
            "in": "query",
            "description": "Filter budgets by year",
            "schema": {
              "example": 2025,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of budgets with their spent amounts.",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "limit_amount": 500,
                      "month": 7,
                      "year": 2025,
                      "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "created_at": "2025-07-28T00:00:00.000Z",
                      "updated_at": "2025-07-28T00:00:00.000Z",
                      "total_spent": 150
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/budgets/{id}": {
      "get": {
        "operationId": "BudgetsController_findOne",
        "summary": "Get a specific budget by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The budget with its spent amount.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "limit_amount": 500,
                    "month": 7,
                    "year": 2025,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z",
                    "total_spent": 150
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "BudgetsController_update",
        "summary": "Update a budget",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBudgetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated budget.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "category_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "limit_amount": 600,
                    "month": 7,
                    "year": 2025,
                    "user_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-07-28T00:00:00.000Z",
                    "updated_at": "2025-07-28T00:00:00.000Z",
                    "total_spent": 150
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "BudgetsController_remove",
        "summary": "Delete a budget",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The budget has been successfully deleted."
          }
        },
        "tags": [
          "Budgets"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/summary": {
      "get": {
        "operationId": "ReportsController_getSummary",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeHidden",
            "required": false,
            "in": "query",
            "description": "Include hidden wallets in the report",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A summary of income, expense, and net.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "totalIncome": 5000,
                    "totalExpense": 2500,
                    "net": 2500
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/by-category": {
      "get": {
        "operationId": "ReportsController_getCategoryReport",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeHidden",
            "required": false,
            "in": "query",
            "description": "Include hidden wallets in the report",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A report of transactions grouped by category.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "income": [
                      {
                        "name": "Salary",
                        "color": "#26de81",
                        "icon": "briefcase-outline",
                        "total": 5000
                      }
                    ],
                    "expense": [
                      {
                        "name": "Groceries",
                        "color": "#ff4757",
                        "icon": "cart-outline",
                        "total": 1500
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/by-wallet": {
      "get": {
        "operationId": "ReportsController_getWalletReport",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeHidden",
            "required": false,
            "in": "query",
            "description": "Include hidden wallets in the report",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A report of transactions grouped by wallet.",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "name": "My Bank Account",
                      "initialBalance": 1000,
                      "totalIncome": 2000,
                      "totalExpense": 500,
                      "finalBalance": 2500
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/export/transactions/csv": {
      "get": {
        "operationId": "ExportController_exportTransactions",
        "summary": "Export user transactions to CSV",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Export"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/backup": {
      "get": {
        "operationId": "BackupController_backup",
        "summary": "Backup user data",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Backup & Restore"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/backup/restore": {
      "post": {
        "operationId": "BackupController_restore",
        "summary": "Restore user data",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Backup & Restore"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/analytics/generate": {
      "post": {
        "operationId": "AnalyticsController_generateAnalytics",
        "summary": "Generate financial analytics using AI",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAnalyticsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The analytics has been successfully generated."
          }
        },
        "tags": [
          "Analytics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Wallport API",
    "description": "API for Personal Finance Tracker Application",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "newPassword123"
          }
        },
        "required": [
          "password"
        ]
      },
      "UpdateConfigDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "fractions": {
            "type": "number",
            "example": 2
          },
          "gemini_api_key": {
            "type": "string",
            "example": "ysgdjsyhgdjshdgajs"
          }
        }
      },
      "CreateWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My Bank Account"
          },
          "initial_balance": {
            "type": "number",
            "example": 1000
          },
          "hidden": {
            "type": "boolean",
            "default": false
          },
          "is_main_wallet": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "name",
          "initial_balance"
        ]
      },
      "UpdateWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My Primary Bank Account"
          },
          "initial_balance": {
            "type": "number",
            "example": 1500
          },
          "hidden": {
            "type": "boolean"
          },
          "is_main_wallet": {
            "type": "boolean"
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Salary"
          },
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "example": "income"
          },
          "icon": {
            "type": "string",
            "example": "briefcase-outline"
          },
          "color": {
            "type": "string",
            "example": "#26de81"
          }
        },
        "required": [
          "name",
          "type",
          "icon",
          "color"
        ]
      },
      "BulkCreateCategoryDto": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCategoryDto"
            }
          }
        },
        "required": [
          "categories"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Freelance Income"
          },
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "example": "income"
          },
          "icon": {
            "type": "string",
            "example": "laptop-outline"
          },
          "color": {
            "type": "string",
            "example": "#45aaf2"
          }
        }
      },
      "CreateTransactionByTextDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "i just eat burger for 10 dollar"
          }
        },
        "required": [
          "content"
        ]
      },
      "CreateTransactionDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "example": "expense"
          },
          "amount": {
            "type": "number",
            "example": 50
          },
          "wallet_id": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "is_recurring": {
            "type": "boolean",
            "default": false
          },
          "recurring_pattern": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly"
            ]
          }
        },
        "required": [
          "type",
          "amount",
          "wallet_id",
          "category_id",
          "date"
        ]
      },
      "UpdateTransactionDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ]
          },
          "amount": {
            "type": "number"
          },
          "wallet_id": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "is_recurring": {
            "type": "boolean"
          },
          "recurring_pattern": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly"
            ]
          }
        }
      },
      "CreateBudgetDto": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "string"
          },
          "limit_amount": {
            "type": "number",
            "example": 500
          },
          "month": {
            "type": "number",
            "example": 7
          },
          "year": {
            "type": "number",
            "example": 2025
          }
        },
        "required": [
          "category_id",
          "limit_amount",
          "month",
          "year"
        ]
      },
      "UpdateBudgetDto": {
        "type": "object",
        "properties": {
          "limit_amount": {
            "type": "number",
            "example": 600
          }
        }
      },
      "GenerateAnalyticsDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The start date for the analytics period (YYYY-MM-DD)"
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the analytics period (YYYY-MM-DD)"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ]
      },
      "User": {
        "type": "object",
        "properties": {}
      },
      "Budget": {
        "type": "object",
        "properties": {}
      },
      "Category": {
        "type": "object",
        "properties": {}
      },
      "Transaction": {
        "type": "object",
        "properties": {}
      },
      "Wallet": {
        "type": "object",
        "properties": {}
      }
    }
  }
}